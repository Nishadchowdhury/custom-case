generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * enum is a list of a vallid entries
 * you can define an enum type in your Prisma schema file and then use it as the type for a field in your model. model. Prisma will generate the corresponding database column with the specified enum type, ensuring that only valid values are stored in the column.
 * DB will not recieve any value except the list of values that are in the enum.
 */
enum OrderStatus {
  fullfilled
  shipped
  awaiting_shipment
}

enum PhoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
  iphone16
}

enum CaseMaterial {
  silicone
  polycarbonate
  plasticpvc
  stainlesssteel
}

enum CaseFinished {
  smooth
  textured
  glossy
  antique
}

enum CaseColor {
  black
  blue
  rose
  green
  sky
  orange
}

model Configuration {
  id              String        @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  color           CaseColor?
  model           PhoneModel?
  material        CaseMaterial?
  finish          CaseFinished?
  croppedImageUrl String?
  Order           Order[]
}

model User {
  id     String  @id @default(cuid())
  email  String  @unique
  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  isPaid          Boolean       @default(false)
  status          OrderStatus   @default(awaiting_shipment)

  ShippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  BillingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
